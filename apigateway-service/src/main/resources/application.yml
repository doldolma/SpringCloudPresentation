server:
  port: 8000

spring:
  application:
    name: apigateway-service
  kafka:
    bootstrap-servers: 127.0.0.1:9092
  sleuth:
    sampler:
      probability: 1.0
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
#            - Mehtod=GET
#            - Cookie=role,123
#            - Header=X-Request-ID,\d+
#            - Host=api.grew.com
#            - Query=userId,\d+
#            - RemoteAddr=192.168.0.1/24
#            - Weight=group1, 8
#            - After= 2022-02-20T17:42:47.789-07:00[Asia/Seoul]
#            - Before=
#            - Between=

          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: letter-service
          uri: lb://LETTER-SERVICE
          predicates:
            - Path=/letter-service/**
          filters:
            - RewritePath=/letter-service/(?<segment>.*), /$\{segment}
        - id: config-service
          uri: lb://CONFIG-SERVICE
          predicates:
            - Path=/config-service/**
          filters:
            - RewritePath=/config-service/(?<segment>.*), /$\{segment}

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
    metadataMap:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
      "sys.module": "ApiGateway"


management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus

logging:
  level:
    org.springframework: TRACE
